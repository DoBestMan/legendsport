apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: ######NAMESPACE######websocket-backend-config
spec:
  timeoutSec: 3600
  connectionDraining:
    drainingTimeoutSec: 3600
---
apiVersion: v1
kind: Service
metadata:
  name: ######NAMESPACE######web
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"ports": {"6001":"######NAMESPACE######websocket-backend-config"}}'
spec:
  ports:
    - port: 80
      name: ######NAMESPACE######web
      targetPort: 80
    - port: 6001
      name: ######NAMESPACE######websockets
      targetPort: 6001
  selector:
    application: ######NAMESPACE######web

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ######NAMESPACE######web
spec:
  replicas: 1
  selector:
    matchLabels:
      application: ######NAMESPACE######web
  template:
    metadata:
      labels:
        application: ######NAMESPACE######web
    spec:
      volumes:
        - name: nginx-conf
          configMap:
            name: ######NAMESPACE######nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
      initContainers:
        - name: create-db
          image: ######BACKEND_IMAGE######
          command: ['/bin/sh', '-c', "php artisan migrate && php artisan db:seed"]
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: ######NAMESPACE######php-environment
      containers:
        - image: ######BACKEND_IMAGE######
          name: php
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: ######NAMESPACE######php-environment

        - image: ######FRONTEND_IMAGE######
          name: nginx
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /etc/nginx
              readOnly: true
              name: nginx-conf
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 15
            httpGet:
              port: 80
              httpHeaders:
                - name: Host
                  value: ######DOMAIN_NAME######

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ######NAMESPACE######nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name localhost;

            index index.php index.html;
            error_log  /var/log/nginx/error.log;
            access_log /var/log/nginx/access.log;
            root /var/www/html/public;

            location / {
                try_files $uri /index.php?$args;
            }

            location ~ \.php$ {
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass localhost:9000;
                fastcgi_index index.php;
                include /etc/nginx/fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
            }
        }

        server {
            listen 6001 default_server;
            listen [::]:6001 default_server;
            server_name localhost;

            index index.php index.html;
            error_log  /var/log/nginx/error.log;
            access_log /var/log/nginx/access.log;
            root /var/www/html/public;

            location / {

                proxy_pass http://######NAMESPACE######websockets:6001/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Forwarded-For $remote_addr;
            }
        }
    }
